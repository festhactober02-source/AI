import difflib

class AutoCorrect:
    def __init__(self, dictionary):
        self.dictionary = set(dictionary)  # store words in a set for fast lookup
    
    def correct(self, word):
        # If word is correct, return it
        if word in self.dictionary:
            return word
        
        # Find the closest match
        suggestions = difflib.get_close_matches(word, self.dictionary, n=1, cutoff=0.7)
        if suggestions:
            return suggestions[0]
        return word  # if no close match, return original word

# Example usage:
if __name__ == "__main__":
    # Example dictionary (you can expand with a real one)
    dictionary = ["hello", "world", "python", "openai", "chatgpt", "code", "programming"]
    
    autocorrect = AutoCorrect(dictionary)
    if suggestions:
            return suggestions[0]
        return word  # if no close match, return original word

# Example usage:
if __name__ == "__main__":
    # Example dictionary (you can expand with a real one)
    dictionary = ["hello", "world", "p










